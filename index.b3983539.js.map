{"mappings":"AAAA,MAAMA,EAAaC,SAASC,cAAc,cACpCC,EAAaF,SAASC,cAAc,WACpCE,EAAOH,SAASC,cAAc,YAC9BG,EAAgBJ,SAASC,cAAc,sBAE7CC,EAAWG,iBAAiB,SAE5B,WACED,EAAcE,mBAAmB,YAJpB,qC,IAOfP,EAAWM,iBAAiB,UAE5B,SAAqBE,GACnBA,EAAIC,iBACJ,MAAMC,EAAO,IAAIC,SAASH,EAAII,gBAkBhCC,eAA4BC,GAC1B,MAAMC,EAAQD,EAAIE,KAAIH,MAAMI,IAC1B,MAAMC,QAAaC,MAAM,uCAAuCF,KAChE,IAAKC,EAAKE,GACR,MAAM,IAAIC,MAGZ,OAAOH,EAAKI,MAAM,IAGdZ,QAAaa,QAAQC,WAAWT,GAKtC,OAJmBL,EAChBe,QAAO,EAACC,OAAEA,KAAwB,cAAXA,IACvBV,KAAI,EAACW,MAAEA,KAAYA,EAAM,I,EA1B5BC,CAJYlB,EACTmB,OAAO,WACPJ,QAAOR,GAAQA,IACfD,KAAIC,GAAQA,EAAKa,UAEjBC,MAAKlB,MAAMK,IACV,MAAMc,EAAWd,EAAKF,KAAI,EAACiB,QAAEA,KAAcA,EAAQ,KAC7CC,QA4BZrB,eAA0BC,GACxB,MAAMqB,EAAW,+BACXC,EAAU,kCAEVrB,EAAQD,EAAIE,KAAIH,MAAMwB,IAC1B,MAAMC,EAAS,IAAIC,gBAAgB,CACjCC,IAAKJ,EACLK,EAAGJ,EACHK,KAAM,OAGFxB,QAAaC,MAAM,GAAGgB,kBAAyBG,KAErD,IAAKpB,EAAKE,GACR,MAAM,IAAIC,MAAMH,EAAKyB,YAGvB,OAAOzB,EAAKI,MAAM,IAGdZ,QAAaa,QAAQC,WAAWT,GAKtC,OAJaL,EACVe,QAAO,EAACC,OAAEA,KAAwB,cAAXA,IACvBV,KAAI,EAACW,MAAEA,KAAYA,G,CAnDWiB,CAAWZ,GACxC5B,EAAKyC,UAuDX,SAAsB/B,GACpB,OAAOA,EACJE,KACC,EACE8B,SAASC,OACPA,EACAC,WAAWC,KAAEA,EAAIC,KAAEA,IAErBC,UAAUC,QAAEA,EAAOC,KAAEA,MAErB,gCAEMD,uBACAC,qCAEEH,WAAcD,eACrBA,iBACAF,iBAGJO,KAAK,G,CA3EaC,CAAarB,EAAe,IAE9CsB,OAAMC,GAAKC,QAAQC,IAAIF,KACvBG,SAAQ,KACPvD,EAAcwC,UAxBL,qCAyBT7C,EAAW6D,OAAO,G","sources":["src/js/index.js"],"sourcesContent":["const searchForm = document.querySelector('.js-search');\nconst addCountry = document.querySelector('.js-add');\nconst list = document.querySelector('.js-list');\nconst formContainer = document.querySelector('.js-form-container');\nconst markup = '<input type=\"text\" name=\"country\">';\naddCountry.addEventListener('click', handlerAddInput);\n\nfunction handlerAddInput() {\n  formContainer.insertAdjacentHTML('beforeend', markup);\n}\n\nsearchForm.addEventListener('submit', handlerForm);\n\nfunction handlerForm(evt) {\n  evt.preventDefault();\n  const data = new FormData(evt.currentTarget);\n  const arr = data\n    .getAll('country')\n    .filter(item => item)\n    .map(item => item.trim());\n  getCountries(arr)\n    .then(async resp => {\n      const capitals = resp.map(({ capital }) => capital[0]);\n      const weatherService = await getWeather(capitals);\n      list.innerHTML = createMarkup(weatherService);\n    })\n    .catch(e => console.log(e))\n    .finally(() => {\n      formContainer.innerHTML = markup;\n      searchForm.reset();\n    });\n}\n\nasync function getCountries(arr) {\n  const resps = arr.map(async item => {\n    const resp = await fetch(`https://restcountries.com/v3.1/name/${item}`);\n    if (!resp.ok) {\n      throw new Error();\n    }\n\n    return resp.json();\n  });\n\n  const data = await Promise.allSettled(resps);\n  const countryObj = data\n    .filter(({ status }) => status === 'fulfilled')\n    .map(({ value }) => value[0]);\n\n  return countryObj;\n}\n\nasync function getWeather(arr) {\n  const BASE_URL = 'http://api.weatherapi.com/v1';\n  const API_KEY = 'b8c62e719a6e4ef6972172816241607';\n\n  const resps = arr.map(async city => {\n    const params = new URLSearchParams({\n      key: API_KEY,\n      q: city,\n      lang: 'uk',\n    });\n\n    const resp = await fetch(`${BASE_URL}/current.json?${params}`);\n\n    if (!resp.ok) {\n      throw new Error(resp.statusText);\n    }\n\n    return resp.json();\n  });\n\n  const data = await Promise.allSettled(resps);\n  const objs = data\n    .filter(({ status }) => status === 'fulfilled')\n    .map(({ value }) => value);\n\n  return objs;\n}\n\nfunction createMarkup(arr) {\n  return arr\n    .map(\n      ({\n        current: {\n          temp_c,\n          condition: { text, icon },\n        },\n        location: { country, name },\n      }) =>\n        `<li>\n    <div>\n        <h2>${country}</h2>\n        <h3>${name}</h3>\n    </div>\n    <img src=\"${icon}\" alt=\"${text}\">\n    <p>${text}</p>\n    <p>${temp_c}</p>\n</li>`\n    )\n    .join('');\n}\n"],"names":["$85a5f86b715fe7db$var$searchForm","document","querySelector","$85a5f86b715fe7db$var$addCountry","$85a5f86b715fe7db$var$list","$85a5f86b715fe7db$var$formContainer","addEventListener","insertAdjacentHTML","evt","preventDefault","data","FormData","currentTarget","async","arr","resps","map","item","resp","fetch","ok","Error","json","Promise","allSettled","filter","status","value","$85a5f86b715fe7db$var$getCountries","getAll","trim","then","capitals","capital","weatherService","BASE_URL","API_KEY","city","params","URLSearchParams","key","q","lang","statusText","$85a5f86b715fe7db$var$getWeather","innerHTML","current","temp_c","condition","text","icon","location","country","name","join","$85a5f86b715fe7db$var$createMarkup","catch","e","console","log","finally","reset"],"version":3,"file":"index.b3983539.js.map"}